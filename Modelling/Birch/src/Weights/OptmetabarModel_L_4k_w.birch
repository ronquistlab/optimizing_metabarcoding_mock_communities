/**
 * Model for optimal metabarcoding study,  Lysate data set
 */
class OptmetabarModel_L_4k_w < Model {
  k:Real[4];
  θ:Real;
  μ:Random<Real>;
  σ2:Random<Real>;
  c:Real[56];
  Reads:Integer[_];
  weights:Real[_] <- [1.27, 1.81, 1.20, 0.21];

  override function simulate() {
      k[1] <~ Gamma(1.0, 10.0);
      k[2] <~ Gamma(1.0, 10.0);
      k[3] <~ Gamma(1.0, 10.0);
      k[4] <~ Gamma(1.0, 10.0);
      let logθ <~ Gaussian(0.0, pow(2.0, 2));
      θ <- exp(logθ);
      σ2 ~ InverseGamma(3.0, 3.0*9.0);
      μ ~ Gaussian(6.5, σ2);
  }

  override function simulate(j:Integer) {
       let logC <~ Gaussian(μ, σ2);
       c[j] <- exp(logC);
          for t in 1..4 {
            if Reads[t] > 0 {
              Reads[t] ~> Gamma(k[t]*weights[t], c[j]*θ);
            }
          }
   }

  override function read(j:Integer, buffer:Buffer) {
    Reads <-? buffer.get<Integer[_]>();
  }

  override function write(buffer:Buffer) {
    buffer.set("k", k);
    buffer.set("θ", θ);
    for i in 1..56 { buffer.set("c" + i, c[i]); }
    buffer.set("μ", μ);
    buffer.set("σ2", σ2);
  }
}

